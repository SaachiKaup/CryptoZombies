{
	"compiler": {
		"version": "0.8.14+commit.80d49f37"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "zombieId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "dna",
						"type": "uint256"
					}
				],
				"name": "NewZombie",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_zombieId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_targetDna",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_species",
						"type": "string"
					}
				],
				"name": "feedAndMultiply",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_zombieId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_kittyId",
						"type": "uint256"
					}
				],
				"name": "feedOnKitty",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "generateRandomZombie",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "setKittyContractAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "zombies",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "dna",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "level",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "readyTime",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"isOwner()": {
					"returns": {
						"_0": "true if `msg.sender` is the owner of the contract."
					}
				},
				"owner()": {
					"returns": {
						"_0": "the address of the owner."
					}
				},
				"renounceOwnership()": {
					"details": "Allows the current owner to relinquish control of the contract."
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"newOwner": "The address to transfer ownership to."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"renounceOwnership()": {
					"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Zombiefeeding.sol": "ZombieFeeding"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/OwnableZombie.sol": {
			"keccak256": "0xf09951a477a38cd989c99db35c07d08fd393d8ec43ac1c26370dfe85d4f1fe30",
			"urls": [
				"bzz-raw://e591b7837a11f6689c15b99cfb56ab979d4e9761d135d850378f79502fc4e98d",
				"dweb:/ipfs/QmaSPkznG8RLB1WtamESU7cvN8ZmB7NQVarRsYMbgQeFB7"
			]
		},
		"contracts/Zombiefactory.sol": {
			"keccak256": "0xc43a1f7c2cc10a2af7dc91e2965f087b047fed05263ef942f05055ff02d9bffe",
			"urls": [
				"bzz-raw://927ba051f86b74ae1515e1fc756a9e60b27e390c7a958adc53d6474f478fbf2d",
				"dweb:/ipfs/QmXMLFj46FKd2ymeqfYf5Pkey6RKoXiDHdpy4LNMhFFH2k"
			]
		},
		"contracts/Zombiefeeding.sol": {
			"keccak256": "0x2ba84dc2df5c67d287a8079e1289204b46c0309c41667ba613720c5afa94c8ab",
			"urls": [
				"bzz-raw://a257464e3d7ae3585a0dfb21bb3817830acf3a6e622ee2fb1dd55ebf8589b933",
				"dweb:/ipfs/QmaWpCvWKu9RdhgL1o57mbmHv9qKhTMWGyZLdwir1jbFtY"
			]
		}
	},
	"version": 1
}